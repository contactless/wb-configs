#!/bin/bash
. /usr/lib/wb-utils/wb_env.sh
wb_source "of"

# generate u-boot env config before config-package debheler 
UBOOT_DIR="/usr/share/wb-configs/u-boot"
UBOOT_FNAME="fw_env.config.wb"
if of_machine_match "fsl,imx6ul" || of_machine_match "fsl,imx6ull"; then
    FVER="imx6"
elif of_machine_match "fsl,imx28" || of_machine_match "fsl,imx23"; then
    FVER="mxs"
else
    UBOOT_FNAME="default"
fi
cp "${UBOOT_DIR}/${UBOOT_FNAME}.${FVER}" "/etc/${UBOOT_FNAME}"

#DEBHELPER#

RULES_DST_DIR=/etc/udev/rules.d
RULES_DIR=/usr/share/wb-configs/udev/

# Args:
# - rules file (e.g. "99-wb-uart")
# - suffix (e.g. "wb5")
install_rules() {
	ucf --debconf-ok "$RULES_DIR/$1.rules.$2" "$RULES_DST_DIR/$1.rules"
}

if of_machine_match "contactless,imx6ul-wirenboard60"; then
    install_rules 99-wb-uart wb6
    install_rules 99-wb-ethernet wb6
elif of_machine_match "contactless,imx28-wirenboard50"; then
    install_rules 99-wb-uart wb5
elif of_machine_match "contactless,imx23-wirenboard41"; then
    install_rules 99-wb-uart wb4
elif of_machine_match "contactless,imx23-wirenboard32"; then
    install_rules 99-wb-uart wb3
elif of_machine_match "contactless,imx23-wirenboard28"; then
    install_rules 99-wb-uart wb2
else
    install_rules 99-wb-uart default
fi

# fix device_bundle certificate

CERT_IN=/etc/ssl/certs/device_bundle.crt.pem
CERT_OUT=/etc/ssl/device/device_bundle.crt.pem
CERT_BKP=/etc/ssl/device/_device_bundle.crt.pem

prn() {
    cat $CERT_IN|grep "$1" -n|sed -n "$2p"|cut -d':' -f1
}

fix() {
    B1=$(prn "BEGIN CERTIFICATE" 1)
    B2=$(prn "BEGIN CERTIFICATE" 2)
    E1=$(prn "END CERTIFICATE" 1)
    E2=$(prn "END CERTIFICATE" 2)

    if [[ "$E1" -le "$B1" || "$E2" -le "$B2" || "$E1" -ge "$B2" ]]; then
        echo "ERROR in device cert bundle."
        exit 1
    fi

    cat $CERT_IN|sed -n "${B2},${E2}p"
    cat $CERT_IN|sed -n "${B1},${E1}p"
}

mkdir -p /etc/ssl/device

if [ -f "$CERT_IN" ]; then
    echo "backup device bundle certificate..."
    cp "$CERT_IN" "$CERT_BKP"
fi

if [ ! -f "$CERT_OUT" ]; then
    if [ ! -f "$CERT_IN" ]; then
        echo "ERROR: no such file: $CERT_IN"
        exit 1
    fi
    fix > "$CERT_OUT"
    echo "Device bundle certificate fix done."
    rm -f "${CERT_IN}"
else
    echo "Device cert $CERT_OUT already fixed."
fi

update-ca-certificates
